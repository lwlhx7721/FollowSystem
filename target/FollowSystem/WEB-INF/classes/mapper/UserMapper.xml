<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace目前可以自定义要唯一，将来面向接口编程时对应dao接口，
一 个mapper相当于一个dao接口的实现类 -->
<mapper namespace="com.jxd.dao.IUserDao">
    <!--User getUserByUserId(int userId);-->
    <sql id="baseSql">
        select userId,userName,pwd,phone,email,note,flag,loginTime,deptId from followsystem.user
    </sql>
    <select id="getUserByUserId" resultType="User">
        <include refid="baseSql"></include>
        where userid = #{userId}
    </select>
    <update id="setLoginTime">
        UPDATE followsystem.user
        SET loginTime=#{loginTime}
        WHERE userId=#{userId}
    </update>
    <select id="getAllUsers" resultType="Map">
        SELECT userId,userName,a.phone,a.email,a.note,a.flag,DATE_FORMAT(a.loginTime,'%Y-%m-%d %H:%i:%S') loginTime,d.deptName
        FROM
        (SELECT * FROM `user` WHERE not userid in (
        SELECT userid FROM userrolerelationship WHERE roleid = 1)) a
        LEFT JOIN dept d
        ON a.deptid=d.deptid
        <where>
            <if test="userName !=''">
             userName like concat('%',#{userName},'%')
            </if>
            <if test="deptId != 0">
                and a.deptId=#{deptId}
            </if>
        </where>
    </select>

    <select id="getAllUserByPage" resultType="Map">
        SELECT a.userId AS userId,a.userName AS userName,a.phone,a.email,a.note,a.flag,DATE_FORMAT(a.loginTime,'%Y-%m-%d %H:%i:%S') loginTime,d.deptName
        FROM
        (SELECT * FROM `user` WHERE not userid in
        (SELECT userid FROM userrolerelationship WHERE roleid = 1)) a
        LEFT JOIN dept d
        ON a.deptid=d.deptid
        <where>
            <if test="userName !=''">
                userName like concat('%',#{userName},'%')
            </if>
            <if test="deptId != 0">
                and a.deptId=#{deptId}
            </if>
        </where>
        order by userId
        limit #{pageIndex},#{pageSize}
    </select>
    <insert id="addUser">
        INSERT INTO followsystem.user(userName,pwd,phone,email,note,deptId)
        VALUES (#{userName},#{pwd},#{phone},#{email},#{note},#{deptId})
    </insert>
    <update id="updUser">
        UPDATE followsystem.user
        SET userName=#{userName}
        ,phone=#{phone}
        ,email=#{email}
        ,note=#{note}
        ,deptId=#{deptId}
        WHERE userId=#{userId}
    </update>

    <!--boolean delUsersByUserId(String userIds);-->
    <delete id="delUsersByUserId">
        delete from followsystem.user where userId in ${userIds}
    </delete>

    <!--boolean delUserByUserId(int userId);-->
    <delete id="delUserByUserId">
        delete from followsystem.user where userId = #{userId}
    </delete>

    <select id="getAllUserByRole" resultType="Map">
        SELECT a.userId AS userId,a.userName AS userName,a.pwd,a.deptId
        FROM
        (SELECT * FROM `user` WHERE not userid in
        (SELECT userid FROM userrolerelationship WHERE roleid = 1)) a
        LEFT JOIN dept d
        ON a.deptid=d.deptid
        <where>
                a.userName like concat('%',#{userName},'%')
            <if test="deptId != 0">
                and a.deptId=#{deptId}
            </if>
        </where>
        order by a.userId
        limit #{pageIndex},#{pageSize}
    </select>

    <update id="updUserByUser">
        UPDATE `user`
        SET userName=#{userName},phone=#{phone},email=#{email},note=#{note}
        WHERE userid=#{userId}
    </update>

    <update id="updPwd">
        UPDATE followsystem.user
        SET pwd=#{pwd}
        WHERE userId=#{userId}
    </update>
</mapper>