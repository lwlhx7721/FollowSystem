<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace目前可以自定义要唯一，将来面向接口编程时对应dao接口，一个mapper相当于一个dao接口的实现类 -->
<mapper namespace="com.jxd.dao.IEvaluateDao">
    <select id="getAllStuList" resultType="map">
        SELECT
            student.stuId,
            student.stuName,
            student.sex,
            student.university,
            student.birthPlace,
            class.className,
            <foreach collection="courseList" item="course" separator=",">
                ${course.courseName}.score ${course.courseName}
            </foreach>
            ,sc.evaluatescore 学校评价,
            job1.totalscore 转正评价,
            job2.totalscore 工作一年评价,
            job3.totalscore 工作两年评价,
            job4.totalscore 工作三年评价
        FROM
            student
            <foreach collection="courseList" item="course" separator=" ">
                LEFT JOIN score ${course.courseName} ON student.stuid = ${course.courseName}.stuid
                AND ${course.courseName}.courseid = ${course.courseId}
            </foreach>
            LEFT JOIN schoolevaluation sc ON student.stuid = sc.stuid
            LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000001 GROUP BY stuid) job1
            ON student.stuid = job1.stuid
            LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000002 GROUP BY stuid) job2
            ON student.stuid = job2.stuid
            LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000003 GROUP BY stuid) job3
            ON student.stuid = job3.stuid
            LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000004 GROUP BY stuid) job4
            ON student.stuid = job4.stuid
            LEFT JOIN class on student.classId = class.classId
    </select>

    <!--List<Map<String,Object>> getAllStuListByPage(@Param("courseList") List<Course> courseList,@Param("pageIndex") int pageIndex,@Param("pageSize") int pageSize);-->
    <select id="getAllStuListByPage" resultType="map">
        SELECT
        student.stuid,
        student.stuname,
        student.sex,
        student.university,
        student.birthPlace,
        class.className,
        <foreach collection="courseList" item="course" separator=",">
            ${course.courseName}.score ${course.courseName}
        </foreach>
        ,sc.evaluatescore 学校评价,
        job1.totalscore 转正评价,
        job2.totalscore 工作一年评价,
        job3.totalscore 工作两年评价,
        job4.totalscore 工作三年评价
        FROM
        student
        <foreach collection="courseList" item="course" separator=" ">
            LEFT JOIN score ${course.courseName} ON student.stuid = ${course.courseName}.stuid
            AND ${course.courseName}.courseid = ${course.courseId}
        </foreach>
        LEFT JOIN schoolevaluation sc ON student.stuid = sc.stuid
        LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000001 GROUP BY stuid) job1
        ON student.stuid = job1.stuid
        LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000002 GROUP BY stuid) job2
        ON student.stuid = job2.stuid
        LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000003 GROUP BY stuid) job3
        ON student.stuid = job3.stuid
        LEFT JOIN (select stuid,sum(evaluatescore) totalscore from jobevaluation where jobevaluation.dateid = 1000004 GROUP BY stuid) job4
        ON student.stuid = job4.stuid
        LEFT JOIN class ON student.classId = class.classId
        order by student.stuid limit #{pageIndex},#{pageSize}
    </select>
</mapper>